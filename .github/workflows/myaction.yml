name: zzangmin_amazing_automation
 
on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./gesipan

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{env.working-directory}}

      - name: Build with Gradle
        run: ./gradlew compileQuerydsl
        working-directory: ${{env.working-directory}}

#       - name: Build and Push Docker Image
#         uses: mr-smithers-excellent/docker-build-push@v4
#         with:
#           image: ${{ secrets.DOCKERHUB_ID }}/team07-airbnb
#           registry: docker.io
#           dockerfile: ${{env.working-directory}}/Dockerfile
#           username: ${{ secrets.DOCKERHUB_ID }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Deploy ðŸ˜† - multiple host
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_WAS_IP }}
#           username: ec2-user
#           key: ${{ secrets.PRIVATE_KEY }}
#           envs: GITHUB_SHA
#           script: |
#             docker pull team07-airbnb:backend-${GITHUB_SHA::7}
#             docker tag team07-airbnb:backend-${GITHUB_SHA::7} airbnb:backend-${GITHUB_SHA::7}
#             docker stop server
#             docker run -d --rm -e profile=$profile -e MYSQL_DATABASE_USERNAME=$MYSQL_DATABASE_USERNAME -e MYSQL_DATABASE_URL=$MYSQL_DATABASE_URL -e MYSQL_DATABASE_PASSWORD=$MYSQL_DATABASE_PASSWORD -e github_client_id=$github_client_id -e github_secret_key=$github_secret_key -e jwt_secret=$jwt_secret -e jwt_expire_length=$jwt_expire_length --name server -p 8080:8080 airbnb:backend-${GITHUB_SHA::7}
            
      - name: Start Ngrinder EC2 - (Controller, Agent)
        run: aws ec2 start-instances --instance-ids 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
